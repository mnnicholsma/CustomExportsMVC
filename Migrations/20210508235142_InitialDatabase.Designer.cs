// <auto-generated />
using System;
using CustomExports.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CustomExports.Migrations
{
    [DbContext(typeof(CustomExportContext))]
    [Migration("20210508235142_InitialDatabase")]
    partial class InitialDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CustomExports.Data.Account", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AdmitDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DischargeDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FacilityId")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountNumber = "5000",
                            AdmitDate = new DateTime(2005, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Balance = 100.12,
                            ClientId = 1,
                            DischargeDate = new DateTime(2005, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FacilityId = 1,
                            PatientId = 200
                        },
                        new
                        {
                            Id = 2,
                            AccountNumber = "5001",
                            AdmitDate = new DateTime(2005, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Balance = 566.22000000000003,
                            ClientId = 2,
                            DischargeDate = new DateTime(2005, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FacilityId = 1,
                            PatientId = 200
                        },
                        new
                        {
                            Id = 3,
                            AccountNumber = "5002",
                            AdmitDate = new DateTime(2005, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Balance = 1921.0,
                            ClientId = 2,
                            DischargeDate = new DateTime(2005, 9, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FacilityId = 1,
                            PatientId = 200
                        },
                        new
                        {
                            Id = 4,
                            AccountNumber = "5003",
                            AdmitDate = new DateTime(2005, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Balance = 50.439999999999998,
                            ClientId = 1,
                            DischargeDate = new DateTime(2005, 9, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FacilityId = 2,
                            PatientId = 201
                        },
                        new
                        {
                            Id = 5,
                            AccountNumber = "5004",
                            AdmitDate = new DateTime(2005, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Balance = 100.0,
                            ClientId = 1,
                            DischargeDate = new DateTime(2005, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FacilityId = 2,
                            PatientId = 201
                        },
                        new
                        {
                            Id = 6,
                            AccountNumber = "5005",
                            AdmitDate = new DateTime(2005, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Balance = 875.22000000000003,
                            ClientId = 2,
                            DischargeDate = new DateTime(2005, 9, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FacilityId = 2,
                            PatientId = 202
                        },
                        new
                        {
                            Id = 7,
                            AccountNumber = "5006",
                            AdmitDate = new DateTime(2005, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Balance = 44.329999999999998,
                            ClientId = 2,
                            DischargeDate = new DateTime(2005, 9, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FacilityId = 5,
                            PatientId = 202
                        },
                        new
                        {
                            Id = 8,
                            AccountNumber = "5007",
                            AdmitDate = new DateTime(2005, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Balance = 10.949999999999999,
                            ClientId = 2,
                            DischargeDate = new DateTime(2005, 9, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FacilityId = 5,
                            PatientId = 202
                        });
                });

            modelBuilder.Entity("CustomExports.Data.AppLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("ClientName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LogTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LogType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfAccounts")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AppLogs");
                });

            modelBuilder.Entity("CustomExports.Data.Client", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ExportFormatId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExportFormatId = 1,
                            Name = "General Hospital"
                        },
                        new
                        {
                            Id = 2,
                            ExportFormatId = 2,
                            Name = "Veteran Hospital"
                        });
                });

            modelBuilder.Entity("CustomExports.Data.ExportConfig", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<string>("Delimiter")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("ExportType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("ExportConfigs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 1,
                            Delimiter = "|",
                            ExportType = "Pipe Delimited Format"
                        },
                        new
                        {
                            Id = 2,
                            ClientId = 2,
                            Delimiter = ",",
                            ExportType = "Comma Delimited Format"
                        });
                });

            modelBuilder.Entity("CustomExports.Data.Account", b =>
                {
                    b.HasOne("CustomExports.Data.Client", "Client")
                        .WithMany("Accounts")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("CustomExports.Data.ExportConfig", b =>
                {
                    b.HasOne("CustomExports.Data.Client", "Client")
                        .WithMany("ExportConfigs")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("CustomExports.Data.Client", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("ExportConfigs");
                });
#pragma warning restore 612, 618
        }
    }
}
